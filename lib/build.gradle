buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}


group 'com.jereksel'

def libraryVersion = System.getenv("TRAVIS_TAG")?.replace("v", "") ?: "NEXT-SNAPSHOT"

version libraryVersion

apply plugin: 'java'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
//    compile group: 'com.github.jnr', name: 'jnr-unixsocket', version: '0.18'
    compile group: 'com.kohlschutter.junixsocket', name: 'junixsocket-common', version: '2.0.4'
    compile group: 'com.kohlschutter.junixsocket', name: 'junixsocket-native-common', version: '2.0.4'
    compile group: 'com.kohlschutter.junixsocket', name: 'junixsocket-native', version: '2.0.4'
    compile group: 'com.kohlschutter.junixsocket', name: 'junixsocket-rmi', version: '2.0.4'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.8.1'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

bintray {
    user = System.getenv('BINTRAY_USER') ?: "b"
    key = System.getenv('BINTRAY_KEY') ?: "c"
    publish = true
    pkg {
        repo = 'maven'
        name = "ji3"
        publish = true
        publicDownloadNumbers = true
        version {
            name = "v$libraryVersion"
            vcsTag = "v$libraryVersion"
        }
    }
    publications = ['MyPublication']
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            groupId 'com.jereksel'
            artifactId 'ji3'
            version libraryVersion
//            artifact "${project.buildDir}/libs/${project.getName()}-${project.version}.jar"
            artifact sourceJar

//            pom.withXml {
//                // Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
//                configurations.compile.allDependencies.each {
//                    def dependencyNode = dependenciesNode.appendNode('dependency')
//                    dependencyNode.appendNode('groupId', it.group)
//                    dependencyNode.appendNode('artifactId', it.name)
//                    dependencyNode.appendNode('version', it.version)
//                }
//            }
        }
    }
}

task sourceJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allJava
}